[user]
    name = Jorge GonzÃ¡lez
    email = scrub.mx@gmail.com
[github]
    user = scrubmx
[core]
    editor = subl --wait
    pager = /usr/local/bin/diff-so-fancy | less --chop-long-lines -M +Gg
    excludesfile = ~/.gitignore_global
[commit]
    template = ~/.gitmessage
[alias]
    c = commit -v
    br = branch
    co = checkout
    st = status
    dt = difftool
    d = diff HEAD -- . ':!public/css/*' ':!public/js/*' ':!public/fonts/*' ':!public/mix-manifest.json' ':!package-lock.json' ':!yarn.lock' ':!npm-shrinkwrap.json' ':!composer.lock*'
    la = "!git config -l | grep alias | cut -c 7-"
    lol = log --graph --pretty=format:'%C(blue)%h%C(auto)%d %C(green)(%cr) %C(dim white)by %C(reset)%C(cyan)%an %C(white)%s %C(reset)'
    wc = git whatchanged
    dlc = diff --cached HEAD^
    append = commit --amend --no-edit
    branches = branch -vv
    remotes = remote -v
    changed = diff-tree --no-commit-id --name-only -r
    conflicts = diff --diff-filter=U
    unstage = reset HEAD --
    cleanup = "!f() { git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D; }; f"
    ours = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
    filelog = log --graph --decorate --stat --pretty=short --abbrev-commit
    latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short) [%(committername)]'
    tracking = "!f() { git for-each-ref --format '%(refname:short):%(upstream:short)' 'refs/heads' | egrep -v ':$'; }; f"
    is-clean-workdir = "!f() { git diff --stat --exit-code || { echo \"Workdir dirty\"; exit 1; }; }; f"
    is-clean-index = "!f() { git diff --stat --cached --exit-code || { echo \"Index dirty\"; exit 2; }; }; f"
    is-clean = "!f() { git is-clean-workdir && git is-clean-index; }; f"
    co-merge = "!f() { local=\"$1\"; remote=\"$2\"; git checkout \"$local\"; git merge --ff-only \"$remote\"; }; f"
    current-branch = rev-parse --abbrev-ref HEAD
    sync = "!f() { git is-clean || { echo Aborting sync.; exit 1; }; current=$(git current-branch); git fetch --all; git tracking | while IFS=: read local remote; do echo \"Merging $local with $remote\"; git co-merge \"$local\" \"$remote\"; done 3>&1 1>&2 2>&3 | egrep -i --color 'fatal|$' 3>&1 1>&2 2>&3; git checkout \"$current\"; }; f"
[color]
    ui = true
    status = auto
    branch = auto
    diff = auto
    showbranch = auto
    interactive = auto
    sh = auto
[color "sh"]
    branch = yellow reverse
    workdir = blue bold
    dirty = red
[color "diff"]
    meta = magenta bold
    frag = blue bold
    whitespace = black reverse
[color "status"]
    added = green
    deleted = red
    changed = yellow
    untracked = cyan
    branch = blue bold
[push]
    # https://git-scm.com/docs/git-config#git-config-pushdefault
    # default = simple
#[diff]
#    tool = kaleidoscope
#[difftool]
#    prompt = false
#[difftool "kaleidoscope"]
#    cmd = /Applications/Kaleidoscope.app/Contents/Resources/bin/ksdiff --wait "$LOCAL" "$REMOTE"
[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f
[filter "hawser"]
    clean = git hawser clean %f
    smudge = git hawser smudge %f
    required = true
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
