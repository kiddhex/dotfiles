<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>COMMIT_EDITMSG</string>
	</array>
	<key>name</key>
	<string>Git: Commit-Message</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.git-commit-message</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.number-sign.git-commit-message</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.branch.git-commit-message</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:On branch )([^ ]+)</string>
					<key>name</key>
					<string>comment.line.on-branch.git-commit-message</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.branch.git-commit-message</string>
						</dict>
					</dict>
					<key>match</key>
					<string>Your branch .* '([^ ']+)'</string>
					<key>name</key>
					<string>comment.line.on-branch.git-commit-message</string>
				</dict>
				<dict>
					<key>begin</key>
					<string> Untracked files:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.definition.untracked.git-commit-message</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^#$</string>
					<key>name</key>
					<string>comment.line.untracked.git-commit-message</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.file-status.git-commit-message</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.branch.git-commit-message</string>
								</dict>
							</dict>
							<key>match</key>
							<string>	(.*)$</string>
							<key>name</key>
							<string>comment.line.untracked-file.git-commit-message</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string> Change(?:s not staged for commit|d but not updated):</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.definition.discarded.git-commit-message</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^#$</string>
					<key>name</key>
					<string>comment.line.discarded.git-commit-message</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.file-status.git-commit-message</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.branch.git-commit-message</string>
								</dict>
							</dict>
							<key>match</key>
							<string>	([^:]+):(.*)$</string>
							<key>name</key>
							<string>comment.line.discarded.git-commit-message</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string> Changes to be committed:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.definition.selected.git-commit-message</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^#$</string>
					<key>name</key>
					<string>comment.line.selected.git-commit-message</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.file-status.git-commit-message</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.branch.git-commit-message</string>
								</dict>
							</dict>
							<key>match</key>
							<string>	([^:]+):(.*)$</string>
							<key>name</key>
							<string>comment.line.selected.git-commit-message</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.inserted.git-diff.clean</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(Nothing to stage \(no difference between working tree and index\)|Nothing to unstage \(no changes in index\))</string>
			<key>name</key>
			<string>meta.git-diff.clean</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.diff</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.from-file</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.to-file</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(diff --git )(\w+/.+) (\w+/.+)\n</string>
			<key>name</key>
			<string>source.git-diff.command</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.extended.index.from-sha</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.extended.index.to-sha</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.extended.index.mode</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^index (\w+)..(\w+) ?(\d+)?\n</string>
			<key>name</key>
			<string>meta.diff.git-diff.header.extended.index</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.extended.modechange.mode</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(:?old mode|new mode|deleted file mode|new file mode) (\d+)\n</string>
			<key>name</key>
			<string>meta.diff.git-diff.header.extended.modechange</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>markup.inserted.git-diff.clean</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(There are no (staged|unstaged) changes to this file)\n</string>
			<key>name</key>
			<string>meta.git-diff.clean</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.diff.git-diff.header.extended.pathchange.path</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(:?copy from|copy to|rename from|rename to) (.+)\n</string>
			<key>name</key>
			<string>meta.diff.git-diff.header.extended.pathchange</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.diff</string>
		</dict>

	</array>
	<key>scopeName</key>
	<string>text.git-commit-message</string>
	<key>uuid</key>
	<string>6e83eb4a-b9de-42e5-a5fb-6371dac1c37e</string>
</dict>
</plist>
